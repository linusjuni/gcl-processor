{ 0 <= n }
{ 0 = 0 }
r := 0;
{ r = 0 }
{ r = 0 & 1 = 1 }
s := 1;
{ r = 0 & s = 1 }
{ 0 <= 0 & r = fib(0) & s = fib(0 + 1) }
i := 0;
{ 0 <= i & r = fib(i) & s = fib(i + 1) }
do[0 <= i & r = fib(i) & s = fib(i + 1)] // TODO: replace `false` by a suitable invariant
  i != n -> 
    { 0 <= i + 1 & s = fib(i + 1) & r + s = fib(i + 2) & i != n }
    { 0 <= i + 1 & s = fib(i + 1) & r + s = fib(i + 2) }
    t := s;
    { 0 <= i + 1 & t = fib(i + 1) & r + s = fib(i + 2) }
    s := r + s;
    { 0 <= i + 1 & t = fib(i + 1) & s = fib(i + 2) }
    r := t;
    { 0 <= i + 1 & r = fib(i + 1) & s = fib(i + 2) }
    i := i + 1
    { 0 <= i & r = fib(i) & s = fib(i + 1) }
od
{ 0 <= i & r = fib(i) & s = fib(i + 1) & !(i != n)}
{ r = fib(n) } // fib(n) is the n-th Fibonacci number
